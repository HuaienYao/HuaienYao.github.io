<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>后端技术 on Wyane&#39;s Blog</title>
    <link>/tags/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 后端技术 on Wyane&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 27 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>解决Linux系统SSH终端显示中文乱码以centos为例</title>
      <link>/technology/linux-os-ssh-show-chinese/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/linux-os-ssh-show-chinese/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fvntln8qacj30gj09sgmt&#34; alt=&#34;&#34; /&gt;
如果没有设置好编码，在SSH客户端连接Linux服务器的时候就是像上面那样显示效果。不过经过设置，可以正常显示中文。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>宝塔面板无法启动pure-ftpd服务的解决办法</title>
      <link>/technology/bt-panel-cannot-active-pure-ftpd/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/bt-panel-cannot-active-pure-ftpd/</guid>
      <description>&lt;p&gt;宝塔面板安装pure-ftpd后发现并没有启动，多次手动重启还是显示关闭状态，重装好几次也无法启动。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>宝塔面板忘记密码如何找回宝塔面板账户登录密码</title>
      <link>/technology/bt-panel-get-password-back/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/bt-panel-get-password-back/</guid>
      <description>&lt;h2 id=&#34;找回密码&#34;&gt;找回密码&lt;/h2&gt;

&lt;p&gt;如果只是忘记了密码，还记得账号&lt;/p&gt;

&lt;p&gt;可以输入以下命令回车找回密码（早期版本默认账号admin）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>宝塔启动nginx服务失败提示failed (98:Address already in use)</title>
      <link>/technology/bt-panel-failed-to-start-nginx/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/bt-panel-failed-to-start-nginx/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;发现宝塔的nginx没有在运行，于是在宝塔面板上手动重启，但是提示失败，失败信息是下面那样：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git生成 SSH 公钥添加到GitHub和Coding.net</title>
      <link>/technology/ssh-key-generator-git/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/ssh-key-generator-git/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;大多数 Git 服务器都会选择使用 SSH 公钥来进行授权。系统中的每个用户都必须提供一个公钥用于授权，没有的话就要生成一个。例如我们在使用GitHub Pages来托管博客，或者将代码推到GitHub或者Coding上的话需要先生成一个SSH并填入到托管平台的设置中来授权。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>宝塔面板安装Flarum轻论坛程序时提示The PHP extension &#39;fileinfo&#39; is required</title>
      <link>/technology/bt-panel-install-fileinfo-for-php/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/bt-panel-install-fileinfo-for-php/</guid>
      <description>&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;

&lt;p&gt;宝塔面板默认并没有安装fileinfo模块，可按以下教程安装：&lt;/p&gt;

&lt;p&gt;注意：以下教程中56为PHP版本，请替换成您要安装此扩展的PHP版本，Flarum轻论坛程序最低要求PHP5.6+&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>编译安装PHP组件出现错误提示内存不足：virtual memory exhausted Cannot allocate memory</title>
      <link>/technology/no-enough-memory-to-make-php/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/no-enough-memory-to-make-php/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;前面一篇我们介绍了&lt;a href=&#34;https://huaien.me/article/backend/bt-panel-install-fileinfo-for-php/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;宝塔面板的PHP默认不安装fileinfo组件，需要手动编译安装&lt;/a&gt;。在php5.6上是没有出现问题，但是在编译php7.1的版本的&lt;code&gt;make &amp;amp;&amp;amp; make install&lt;/code&gt;这一步出现错误，提示：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS用ec2-user用户来更改root密码并使用root用户</title>
      <link>/technology/change-password-for-root-on-aws-ec2/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/change-password-for-root-on-aws-ec2/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;AWS的EC2在创建实例后，默认是使用ec2-user用户加密钥文件来登录ssh，使用AWS默认的EC2账户登录服务器后，用户权限收到很大的限制，有些目录无法访问，需要切换到root账户下工作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>32位Linux系统的node_modules文件夹移到64位系统下报错</title>
      <link>/technology/unable-to-use-nodejs-on-64-bit-os/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/unable-to-use-nodejs-on-64-bit-os/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;把Hexo博客源码整个从32位的Linux系统搬到64位系统下，本来还没发现32位和64位，直到执行hexo clean的时候提示错误才发现。node_modules文件夹的指定模块报错。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux安装nvm后无法使用nvm安装node</title>
      <link>/technology/not-able-to-install-nodejs-by-nvm/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/not-able-to-install-nodejs-by-nvm/</guid>
      <description>&lt;p&gt;今天在给服务器安装nvm的时候出现无法安装node的错误，查询了网上资料，可以通过修改bash_profile来解决。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux下删除某个文件之外的其他所有文件的命令之extglob模式</title>
      <link>/technology/remove-all-except-this-file-linux-command/</link>
      <pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/remove-all-except-this-file-linux-command/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;比如最近我在备份Hexo的时候，多次需要调试效果，因为有备份一个文件夹叫hexo.zip，把这个传到服务器的网站根目录下，然后将其解压。但是之后再重建Hexo的时候需要将目录下所有文件除了hexo.zip都删除的时候，不能只用到简单的rm命令了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>给托管在Coding Pages上的博客开启HTTPS支持 申请失败的原因</title>
      <link>/technology/enable-https-on-coding-pages/</link>
      <pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/enable-https-on-coding-pages/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;前两天将&lt;a href=&#34;http://blog.huaien.me/article/blogengine/how-to-backup-hexo-to-github/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;博客同时托管到GitHub Pages和Coding Pages，并备份到这两个平台&lt;/a&gt;。
然后发现Coding Pages也是可以支持绑定域名和支持自定义域名的HTTPS。所以就顺便点击了申请证书，但是好几次都出现失败。之后研究了一下，才知道原因。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux打包压缩目录中的隐藏文件命令</title>
      <link>/technology/linux-tar-zcvf-command-of-invisible-file/</link>
      <pubDate>Sat, 04 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/linux-tar-zcvf-command-of-invisible-file/</guid>
      <description>&lt;p&gt;今天需要打包Hexo源码文件夹下面的所有文件，但是如果直接使用普通的打包命令不会将包括隐藏的文件或文件夹一起打包，所以得搜索了下，可以用下面的命令来打包。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>利用Caddy来搭建可挂载的WebDAV个人网盘&#43;配合FileBrowser来管理文件</title>
      <link>/technology/use-caddy-to-build-webdav-server/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/use-caddy-to-build-webdav-server/</guid>
      <description>&lt;p&gt;前面我们讲到了&lt;a href=&#34;https://huaien.me/article/backend/caddy-a-light-http-server/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Caddy&lt;/a&gt;以及用&lt;a href=&#34;https://huaien.me/article/backend/use-caddy-to-run-site/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Caddy搭建网站&lt;/a&gt;还有用&lt;a href=&#34;https://huaien.me/article/backend/use-caddy-filemanager-to-build-personal-netdisk/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Caddy的File Manager来搭建个人网盘&lt;/a&gt;。今天我们要讲的用Caddy的WebDav扩展组件来搭建一个Webdav服务器。并且配合Caddy的FileManager扩展组件来在线管理WebDav服务器的文件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>利用Caddy的Filemanager插件搭建个人网盘教程</title>
      <link>/technology/use-caddy-filemanager-to-build-personal-netdisk/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/use-caddy-filemanager-to-build-personal-netdisk/</guid>
      <description>前面我们了解了Caddy是一个极简HTTP服务器，可以用来快速配置网站。并且支持HTTPS，支持自己的SSL证书或者只需要一个邮箱，Caddy帮你自动生成Let&amp;rsquo;s Encrypt的免费证书，简单的配置就能搭建好一个HTTPS的Web服务器环境。
其实Caddy自带的Filemanager插件可以直接用来搭建一个个人网盘，而且支持的功能还挺多，界面还挺好看。 
认识一下File Manager 看上面的动图可以看到用Filemanager可以很方便的在线管理文件。
那么filemanager有哪些功能呢
Caddy FileBrowser扩展介绍 FileBrowser 是基于Caddy的扩展。它提供文件管理界面，可用于 上传/下载/删除/预览和重命名 等该目录中的文件。
 支持 上传文件 支持 按类型 搜索文件 支持 批量压缩 文件下载 支持 多用户管理(权限可控) 支持 在网页执行 Linux命令 支持 创建 共享链接(限时/永久) 支持 在线编辑 各类文本文件 支持 在线浏览 图片/文本/视频等 支持 新建/重命名/移动/删除 文件和文件夹等 部署简单，几步完成，无需任何依赖环境 等等 &amp;hellip;  并且支持中文，日语，英语等多种语言。其中中文文件由逗比根据地博主制作。
安装Caddy与Filemanager插件 如果你已经安装了Caddy，但是没有Filemanager插件，你需要重新安装一次Caddy，附带Filemanager
wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/caddy_install.sh &amp;amp;&amp;amp; chmod +x caddy_install.sh &amp;amp;&amp;amp; bash caddy_install.sh install http.filemanager # 如果上面这个脚本无法下载，尝试使用备用下载： wget -N --no-check-c# 如果上面这个脚本无法下载，尝试使用备用下载： ertificate https://softs.loan/Bash/caddy_install.sh &amp;amp;&amp;amp; chmod +x caddy_install.</description>
    </item>
    
    <item>
      <title>利用Caddy来搭建网站之Caddy配置文件教程</title>
      <link>/technology/use-caddy-to-run-site/</link>
      <pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/use-caddy-to-run-site/</guid>
      <description>&lt;p&gt;前面我们了解了&lt;a href=&#34;https://huaien.me/article/backend/caddy-a-light-http-server/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Caddy是一个极简HTTP服务器&lt;/a&gt;，可以用来快速配置网站。并且支持HTTPS，支持自己的SSL证书或者只需要一个邮箱，Caddy帮你自动生成Let&amp;rsquo;s Encrypt的免费证书，简单的配置就能搭建好一个HTTPS的Web服务器环境。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Caddy一个轻量的Go语言HTTP服务器的一键安装脚本教程</title>
      <link>/technology/caddy-a-light-http-server/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/caddy-a-light-http-server/</guid>
      <description>&lt;p&gt;最近在逛逗比根据地的时候发现了这个用Golang写的极简HTTP WEB Server，叫&lt;a href=&#34;https://doub.io/shell-jc1/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Caddy&lt;/a&gt;，上网查了其实好多博客都写了关于这个。于是就想用闲置的服务器折腾试试。但是毕竟是折腾，过程中还是遇到挺多问题。这里就简单记录一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决32系统无法安装bt宝塔服务器面板</title>
      <link>/technology/install-bt-panel-on-32-bit-os/</link>
      <pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/install-bt-panel-on-32-bit-os/</guid>
      <description>&lt;h2 id=&#34;bt&#34;&gt;bt&lt;/h2&gt;

&lt;p&gt;前段时间把VPS重装系统为debian的32位，因为内存只有512M，还是用32位比较省资源。
但是在安装宝塔面板的时候却提示BT不支持32位系统的安装（如图）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>添加SSL后Nginx的https伪静态配置多次不成功</title>
      <link>/technology/nginx-conf-after-ssl/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/technology/nginx-conf-after-ssl/</guid>
      <description>&lt;p&gt;前两天给&lt;a href=&#34;http://www.hanayao.com&#34; title=&#34;HanaYao博客&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;HanaYao博客&lt;/a&gt;添加了SSL证书。但是经过多次测试，会出现访问带www的域名就会显示Nginx默认页面，或者是404 。多次修改伪静态配置后也还是会出现带www和不带www域名访问出现问题，或者就是进入后台会出现404。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>删除与卸载Debian8的Apache2</title>
      <link>/technology/uninstall-apache20-on-debian8/</link>
      <pubDate>Mon, 18 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/technology/uninstall-apache20-on-debian8/</guid>
      <description>参考源：Linux Tips 由于某些主机提供商在重装系统后系统自带apache2，但是我用不到，一直用的nginx。如果不卸载会导致端口冲突等问题。 所以上网查询了下卸载apache2的资料。  Uninstall and Remove Apache2 on Debian 8
We are going to uninstall and remove Apache2 from our Debian system.
First we have to stop any running instance of Apache2, because Apache2 will not be properly removed while it is running.
For stop Apache2 run below command …
service apache2 stop  Now for remove Apache2 and pakchess run below command …
apt-get purge apache2 apache2-utils apache2.</description>
    </item>
    
    <item>
      <title>开启Nginx的目录文件列表功能-让Nginx显示文件列表</title>
      <link>/technology/let-nginx-show-file-list/</link>
      <pubDate>Thu, 24 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>/technology/let-nginx-show-file-list/</guid>
      <description>&lt;p&gt;今天在hostloc上看到以为朋友xtmp 请教&lt;a href=&#34;http://soft.vpser.net/是如何实现的，可以显示文件列表，因为http://soft.vpser.net/用的是nginx&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://soft.vpser.net/是如何实现的，可以显示文件列表，因为http://soft.vpser.net/用的是nginx&lt;/a&gt; 作为webserver的，但是 nginx默认是不允许列出整个目录的，所以看到版主咯拉无米推荐的方法&lt;a href=&#34;http://www.hostloc.com/thread-21478-1-4.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://www.hostloc.com/thread-21478-1-4.html&lt;/a&gt; 帖子里美国VPS给出一个ctohome的详细教程，下面转自 ctohome&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LNMP下给已存在的虚拟机添加伪静态规则</title>
      <link>/technology/lnmp-conf-rules/</link>
      <pubDate>Fri, 04 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>/technology/lnmp-conf-rules/</guid>
      <description>&lt;p&gt;使用军哥的LNMP，在添加虚拟机的时候没有添加伪静态，但是后来真正使用程序的时候需要伪静态，所以想给已经存在的虚拟主机添加伪静态跪着，由于Apache开启伪静态支持后可以直接修改.htaccess文件就行，但是nginx需要新建一个例如名字为example.conf文件，编辑该文件，把伪静态规则输入进去（注意htaccess的伪静态规则需转成nginx的conf规则才行）然后，在/usr/local/nginx/conf/vhost下编辑 域名.conf文件，得到类似&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>配置.htaccess来实现301重定向（旧域名指向新域名）</title>
      <link>/technology/use-htaccess-301-redirect/</link>
      <pubDate>Sat, 20 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>/technology/use-htaccess-301-redirect/</guid>
      <description>&lt;p&gt;换了域名，为了访问旧域名的访客引导到新域名上，要使用301重定向。&lt;/p&gt;

&lt;p&gt;最后在网上找到这么一个方法，可以通过 .htaccess 来实现 301 重定向，原文如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用Linux系统搭建Web环境做网站网站FTP权限问题</title>
      <link>/technology/linux-ftp-permission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/technology/linux-ftp-permission/</guid>
      <description>&lt;p&gt;在搬瓦工的VPS上，wordpress的主题或者插件无法直接在后台安装与修改。会弹出ftp设置。
导致这一问题，一个是需要修改wordpress的主题和插件的文件夹的权限为777。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>