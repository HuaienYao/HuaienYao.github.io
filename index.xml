<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wyane&#39;s Blog on Wyane&#39;s Blog</title>
    <link>/</link>
    <description>Recent content in Wyane&#39;s Blog on Wyane&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 02 Feb 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Friends</title>
      <link>/links/</link>
      <pubDate>Tue, 02 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>/links/</guid>
      <description>&lt;p&gt;大家好，断断续续接触建站知识开始也快十年了。并没有一直坚持下来，期间也换了几次服务器，源码程序导致中断并丢失数据。以后会好好保护数据。。
如果觉得可以，本博客欢迎与大家交换友情链接。请在添加本博客链接后下方留言或者联系yao#huaien.me 请替换#为@ ，我会在收到信息后及时添加贵站链接。谢谢！&lt;/p&gt;

&lt;p&gt;站名：Wyane&amp;rsquo;s Blog&lt;/p&gt;

&lt;p&gt;链接：&lt;a href=&#34;https://huaien.me&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://huaien.me&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;说明：Do or Die&lt;/p&gt;

&lt;p&gt;图标（如有）：&lt;a href=&#34;https://huaien.me/images/avatar.jpg&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://huaien.me/images/avatar.jpg&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Sites&lt;/th&gt;
&lt;th&gt;Links&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hanayao.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;HanaYao Blog&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://hanayao.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://hanayao.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;HanaYao Blog&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.do1024.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;肉松君博客&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.do1024.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://www.do1024.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;好基友&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.lance.moe&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Lance&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.lance.moe&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://www.lance.moe&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Lance博客&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.xujianhua.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;许建华博客&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.xujianhua.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://www.xujianhua.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;一个草根站长的个人博客。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://blog.hicasper.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;hiCasper&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://blog.hicasper.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://blog.hicasper.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;大前端主题Typecho修改版作者&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>手滑导致设置git remote仓库错误 如何修改远程仓库地址配置</title>
      <link>/technology/change-git-remote-config/</link>
      <pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/technology/change-git-remote-config/</guid>
      <description>&lt;p&gt;本文记录了如何修改git remote配置的远程仓库地址。在不小心设置错误git remote地址时可以用这个方法修改为正确的远程仓库地址配置。&lt;/p&gt;

&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;在同步github仓库的时候手滑了导致设置的git remote地址出错了。然后又添加了一下提示错误。
记录一下如何修改&lt;/p&gt;

&lt;p&gt;在指定远程仓库的时候输入错误导致设置了错误的远程仓库，直接重新用下面的命令会提示错误&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add origin git@github.com:github帐号名/仓库名.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提示已经存在的出错信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fatal: remote origin already exists.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;解决办法&#34;&gt;解决办法&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# 删除错误的远程仓库配置
$ git remote rm origin
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 重新输入正确的远程仓库配置
$ git remote add origin git@github.com:github帐号名/仓库名.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就不会提示已经存在的错误了&lt;/p&gt;

&lt;p&gt;但是如果输入&lt;code&gt;$ git remote rm origin&lt;/code&gt; 还是报错&lt;code&gt;error: Could not remove config section &#39;remote.origin&#39;.&lt;/code&gt;的话，就需要修改gitconfig文件的内容。&lt;/p&gt;

&lt;p&gt;到你的github的安装路径下的etc文件夹，找到一个名为gitconfig的文件，打开它把里面的[remote &amp;ldquo;origin&amp;rdquo;]那一行删除就可以了。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;参考来源：&lt;a href=&#34;https://blog.csdn.net/dengjianqiang2011/article/details/9260435&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/dengjianqiang2011/article/details/9260435&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Disqus提示无法加载的解决办法</title>
      <link>/technology/disqus-error-to-load/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/disqus-error-to-load/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://ae01.alicdn.com/kf/HTB1c6O0X6vuK1Rjy0Faq6x2aVXaB.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;错误提示&#34;&gt;错误提示：&lt;/h3&gt;

&lt;p&gt;Disqus 无法加载。如果您是管理员，请参阅故障排除指南。&lt;/p&gt;

&lt;p&gt;We were unable to load Disqus. If you are a moderator please see our troubleshooting guide.&lt;/p&gt;

&lt;h3 id=&#34;解决方法&#34;&gt;解决方法：&lt;/h3&gt;

&lt;p&gt;在hexo中的根目录下的_config.yml文件中，这段代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# URL
## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;
url: https://www.nihoncard.com
root: /
permalink: :category/:title.html
permalink_defaults:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;url: 处需要设置为带http的完整的链接。我原来写的是&lt;code&gt;/&lt;/code&gt;就会出现以上错误。改了之后就好了。&lt;/p&gt;

&lt;h3 id=&#34;参考&#34;&gt;参考：&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/edcc22f6cf33&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.jianshu.com/p/edcc22f6cf33&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何申请成为Cloudflare Partner合作伙伴</title>
      <link>/internet/become-cloudflare-partner/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/internet/become-cloudflare-partner/</guid>
      <description>&lt;h2 id=&#34;什么是cloudflare&#34;&gt;什么是CloudFlare&lt;/h2&gt;

&lt;p&gt;CloudFlare想必大家还是挺熟悉的，作为世界最大的CDN服务提供商之一，CloudFlare不但提供了免费的域名DNS解析服务，包括了HTTPS加密的免费的CDN服务，还有吊炸天的1.1.1.1 1.0.0.1的公共DNS服务。而且解析速度非常之快，我也将自己10个左右的域名托管在CloudFlare的DNS解析服务上。试过如果添加解析记录或者修改解析记录后，几乎即时生效，虽然说这样有好有坏，但是反应速度之快，真的让我吓一跳。&lt;/p&gt;

&lt;h2 id=&#34;什么是cloudflare-partner&#34;&gt;什么是CloudFlare Partner&lt;/h2&gt;

&lt;p&gt;上面提到了CloudFlare提供域名解析服务和CDN服务等，但是如果你使用的是免费套餐，必须把域名的NS服务器改为CloudFlare提供的地址，虽然大部分DNS解析服务商都是如此，但是有很多人不愿意修改DNS服务器，比如用了DNSPOD的智能解析服务，如果用NS解析来使用CloudFlare的话，就无法使用DNSPOD的解析服务。但是通过CloudFlare Partner合作伙伴计划，我们可以通过另一种方法来使用CloudFlare的DNS解析和CDN服务。&lt;/p&gt;

&lt;p&gt;这就是通过解析cname记录来使用CloudFlare的服务。这样可以使用他们提供的SSL证书来开启HTTPS和CDN服务。
CloudFlare Partner其实就是CloudFlare为了拓展用户提供的合作分销计划。旨在为开发者或者主机提供商提供便利的API服务以拓展用户。用户不需要登录CloudFlare官网来管理域名解析，可以在WHMCS、Cpanel等面板中使用集成的Cloudflare CDN加速服务。&lt;/p&gt;

&lt;h2 id=&#34;申请cloudflare-partner&#34;&gt;申请CloudFlare Partner&lt;/h2&gt;

&lt;h3 id=&#34;填写信息&#34;&gt;填写信息&lt;/h3&gt;

&lt;p&gt;申请CloudFlare Partner页面：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.cloudflare.com/partners/become-a-partner/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.cloudflare.com/partners/become-a-partner/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;打开后界面如下&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fw4bjkwemzj310d0h5768&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fw4bjkwemzj310d0h5768&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;自上而下需要填入的信息为
- 公司名称 （这个你可以只要域名名字，比如abc.com的话写abc）
- ==业务类目== *（这里我第一次选择了Web Designer/Developer被拒绝，回信说合作伙伴计划是提供给主机提供商的服务。）
- 网址 （你自己的域名如&lt;a href=&#34;https://abc.com）&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://abc.com）&lt;/a&gt;
- 名字
- 姓氏
- 职位 （这个虽然为非必填，但是我填了申请成功）
- ==联系邮箱== *（这里为重点，需要使用企业邮箱，没有的话也可以用域名邮箱。比如QQ的域名邮箱，申请方便，可以接收到信。另外邮箱格式最好为admin@abc.com这样的，虽然我用的是w@abc.com这样的）
- 联系电话 （格式为+8613912345678）
- 通过什么途径知道的 （我选择的Customer request，客户要求）
- 备注 （可以放空）&lt;/p&gt;

&lt;p&gt;最后我填写的资料差不多是下面这样的
&lt;a href=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fw4bna1j9qj30cd0em74w&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fw4bna1j9qj30cd0em74w&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;但是我前两次申请失败了。第一次因为选择业务类目选择的网页设计者/开发者，第二次还是用一样信息只是业务类目改为VPS/服务器提供商，估计是留底了。&lt;/p&gt;

&lt;p&gt;点击提交后你的邮箱就会收到邮件
&amp;gt; XXX &amp;ndash; [Cloudflare]: Application Received
&amp;gt; Dear XXX,
&amp;gt;
&amp;gt; Thank you for applying to Cloudflare&amp;rsquo;s Certified Partner Program. Your application has been submitted. We review all applications and respond shortly.
&amp;gt;
&amp;gt; Cloudflare offers many benefits to you as a service provider:
&amp;gt; *   Reduced server load
&amp;gt; *   Bandwidth savings
&amp;gt; *   Fewer customer support tickets
&amp;gt; *   Mitigation of DDoS attacks
&amp;gt; *   IPv4 / IPv6 gateway
&amp;gt;
&amp;gt; On average, a website on Cloudflare:
&amp;gt; *   Loads twice as fast, on an international CDN
&amp;gt; *   Uses 60% less bandwidth
&amp;gt; *   Sees 65% fewer requests
&amp;gt; *   Is way more secure
&amp;gt;
&amp;gt; Thank you for your interest in Cloudflare.
&amp;gt;
&amp;gt; Regards,
&amp;gt; The Cloudflare Team&lt;/p&gt;

&lt;p&gt;第一次申请不到五个小时就回信说拒绝了
&amp;gt; XXX &amp;ndash; [Cloudflare] Application Declined
&amp;gt;
&amp;gt; Dear XXX,
&amp;gt;
&amp;gt; Thank you for your interest in Cloudflare&amp;rsquo;s Certified Hosting Provider program. Unfortunately at this time, Cloudflare has declined your application to become a partner in this program.
&amp;gt;
&amp;gt; The program is created for hosting providers offering commercial hosting only. I&amp;rsquo;d like to encourage you to sign up for Cloudflare directly, take a look at our plans here: www.cloudflare.com/plans
&amp;gt;
&amp;gt; We apologize for any inconvenience that this may cause. If you feel that this decision was reached in error, please contact us at partners@cloudflare.com.
&amp;gt;
&amp;gt; Regards,
&amp;gt; The Cloudflare Team&lt;/p&gt;

&lt;p&gt;第二次只是修改了业务类目为VPS还是拒绝，但是时间花了将近5天才回复。&lt;/p&gt;

&lt;p&gt;拒绝的原因还是一样，估计是我这个域名没有写有关主机相关的内容吧，后来看到其他人说可以通过反代一个VPS博客就可以，于是就换了一个com域名反代了一个主机博客。申请后大概过了一天回信通过。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Cloudflare] Partnership Application Approved for XXX

Congratulations - you&#39;ve been approved for Cloudflare&#39;s Certified Partner Program!

Follow these four steps to get up and running:


Step 1: Log into the Cloudflare Partner Portal

Set Your Password: https://partners.cloudflare.com/reset-password/XXXX

In the partner portal, you will be able to manage your and your customers&#39; services with Cloudflare as well as use it as a central source of news and information about Cloudflare.


Step 2: Integrate your control panels, billing system, or online store

To make it easy for your customers to sign up, Cloudflare offers several options to make this easy. We have pre-created plugins for popular control panel systems like cPanel, Parallels Plesk Panel, Interworx, and ISPsystem. For other systems or for custom systems, Cloudflare offers a documented Host API with which you can integrate. 

Plugin downloads, your Host API access key, and many other resources can be found in the Cloudflare Partner Portal at: https://partners.cloudflare.com


Step 3: Preserve Original Visitor IP in Log Files

All requests to a Cloudflare protected website will come from the Cloudflare IP address ranges: http://www.cloudflare.com/ips

DO NOT THROTTLE OR RATE-LIMIT these IP addresses, or your customers&#39; website visitors will see a &amp;quot;Website Offline&amp;quot; page.

Cloudflare passes the original visitor IP address in the header of every request. To retrieve the original visitor IP from the header, install the appropriate software on your server, you can find download links in the Cloudflare Partner Portal at https://partners.cloudflare.com. (Note: If you use the cPanel plugin and are running Apache, the visitor IP software will automatically be installed).


Step 4: Enable Cloudflare for Three Test Websites

To ensure that Cloudflare was properly installed, enable Cloudflare for three test websites from your control panel.

To check if a website is on Cloudflare, use Terminal. Open Terminal, and enter the following dig command.

    dig www.mydomain.com

Output without Cloudflare-enabled:

    www.mydomain.com   10782   IN   CNAME      www.mydomain.com

Output with Cloudflare-enabled:

    www.mydomain.com    10782  IN           CNAME   www.mydomain.com.cdn.cloudflare.net.

If you see &#39;.cdn.cloudflare.net&#39; at the end, then Cloudflare is enabled.


Understanding How Cloudflare Integrates:
- The plugins and API provision Cloudflare via delegating CNAMEs. Your customers continue to point their domain to your authoritative DNS servers. You do the delegation for them via the plugins or API. Note: this is different than websites that sign up at cloudflare.com directly.
- Since Cloudflare works through CNAMEs, Cloudflare cannot be enabled on the root domain, which is an A record. If your customer wants to use Cloudflare to accelerate and protect traffic going to the root domain, they must add a redirect in the .htaccess file to &#39;www&#39;.
- As a reference, here is one example:

    RewriteEngine On
    # Rewrite added for CloudflareInstall - mysite.com
    # Wednesday 25th of August 2010 04:59:42 AM
    RewriteCond %{HTTP_HOST} ^mysite.com$ [NC]
    RewriteCond %{SERVER_PORT} ^80$
    RewriteRule ^(.*)$ http://www.mysite.com/$1 [R=301,L]


Support Options:
- Partner Technical Support: submit a question here: https://support.cloudflare.com/anonymous_requests/new
    (Note: select &amp;quot;Hosting Partners - Certified&amp;quot; in the dropdown menu)
- Other: email partners@cloudflare.com


Once you have installed Cloudflare and enabled three test websites, within 24 hours you will receive an email outlining next steps and a Launch Plan. We look forward to getting you up and running as a Certified Partner.


Thanks!
The Cloudflare Team
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;注意点&#34;&gt;注意点&lt;/h3&gt;

&lt;p&gt;看了一些人的申请攻略，总结了以下几点
1. 申请表填写的内容全部为英文，用中文填写会导致对方看不懂而拒绝申请。
2. 业务类型选择VPS/服务器
3. 内容要和VPS/服务器有关，如果你是主机推介博客，那就可以了，没有的话可以把你的域名反代一个主机推介博客。
4. 邮箱需要企业邮箱。就是name@yourdomainname.com这种格式的。有人说用国内企业邮箱会导致收不到信，国内企业邮箱服务的确有这种可能信，但是我这次用的是QQ域名邮箱和腾讯企业邮箱都可以正常接收到邮件。
5. 关于申请理由，可填可不填，有些人说可以填写国内网络登录CloudFlare不稳定，因为客户需求，所以申请。但是我这次没填写也通过了。&lt;/p&gt;

&lt;h2 id=&#34;申请通过后的步骤&#34;&gt;申请通过后的步骤&lt;/h2&gt;

&lt;p&gt;通过邮件通知你申请被批准后，需要留意邮件中的链接，
&amp;gt; Step 1: Log into the Cloudflare Partner Portal
&amp;gt;
&amp;gt; Set Your Password: &lt;a href=&#34;https://partners.cloudflare.com/reset-password/XXXX&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://partners.cloudflare.com/reset-password/XXXX&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;第一步就是让你点击链接进去修改密码。
接着登录进去后会让你填写问卷调查。&lt;/p&gt;

&lt;p&gt;填完点击下一步，就会显示你的CloudFlare Partner API，再返回到主页，你就可以看到Cloudflare Partner后台了。&lt;/p&gt;

&lt;h2 id=&#34;使用cloudflare-partner部署域名&#34;&gt;使用Cloudflare Partner部署域名&lt;/h2&gt;

&lt;p&gt;有几种办法来通过Cloudflare Partner来部署解析域名。&lt;/p&gt;

&lt;h3 id=&#34;自用的情况&#34;&gt;自用的情况&lt;/h3&gt;

&lt;p&gt;通过Cloudflare Partner CLI来管理
&lt;a href=&#34;https://github.com/fffonion/cloudflare-partner-cli&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/fffonion/cloudflare-partner-cli&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;使用他人搭建的面板&#34;&gt;使用他人搭建的面板&lt;/h3&gt;

&lt;p&gt;我也用Cloudflare-CNAME-Setup搭建了一个&lt;br /&gt;
&lt;a href=&#34;https://cl.guosao.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://cl.guosao.com&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;开源代码搭建面板&#34;&gt;开源代码搭建面板&lt;/h3&gt;

&lt;p&gt;WeiUZ CloudFlare Partners PHP版本
&lt;a href=&#34;https://github.com/mphreys/WeiUZ&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/mphreys/WeiUZ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SonicBreaker
&lt;a href=&#34;https://github.com/AxelPanda/SonicBreaker/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/AxelPanda/SonicBreaker/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CFPMP
&lt;a href=&#34;https://github.com/Netrvin/CFPMP&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/Netrvin/CFPMP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CloudFlare partner website with python and flask
&lt;a href=&#34;https://github.com/luodaoyi/CloudFlarePartner&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/luodaoyi/CloudFlarePartner&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare Partner Panel
&lt;a href=&#34;https://github.com/ZE3kr/Cloudflare-CNAME-Setup&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/ZE3kr/Cloudflare-CNAME-Setup&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://wzfou.com/cloudflare-partner/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://wzfou.com/cloudflare-partner/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决Linux系统SSH终端显示中文乱码以centos为例</title>
      <link>/technology/linux-os-ssh-show-chinese/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/linux-os-ssh-show-chinese/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fvntln8qacj30gj09sgmt&#34; alt=&#34;&#34; /&gt;
如果没有设置好编码，在SSH客户端连接Linux服务器的时候就是像上面那样显示效果。不过经过设置，可以正常显示中文。&lt;/p&gt;

&lt;h2 id=&#34;查看当前系统编码设置&#34;&gt;查看当前系统编码设置&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# echo $LANG
C
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;返回的值为C，可以知道当前的系统语言编码设置为C&lt;/p&gt;

&lt;h2 id=&#34;查看当前系统的中文支持&#34;&gt;查看当前系统的中文支持&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# locale -a | grep zh_CN
zh_CN
zh_CN.gb18030
zh_CN.gb2312
zh_CN.gbk
zh_CN.utf8

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上列出的为当前系统可用中文字符集&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;vim 只能正确识别列表中的中文编码文件，如需识别其他编码类型的中文文件，则需要做系统升级。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;修改linux系统的编码文件&#34;&gt;修改Linux系统的编码文件&lt;/h2&gt;

&lt;p&gt;以下操作在root权限下操作。&lt;/p&gt;

&lt;h3 id=&#34;临时生效-重启失效&#34;&gt;临时生效，重启失效&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# export LANG=&amp;quot;zh_CN.UTF-8&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看编码设置是否变更为zh_CN.UTF-8&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# echo $LANG
zh_CN.UTF-8
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;永久生效&#34;&gt;永久生效&lt;/h3&gt;

&lt;p&gt;只需要编辑/etc/sysconfig/i18n文件就好了&lt;/p&gt;

&lt;p&gt;用vi编辑&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /etc/sysconfig/i18n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在原来的内容前加上“#”注释掉&lt;/p&gt;

&lt;p&gt;并添加一行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LANG=&amp;quot;zh_CN.UTF-8&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fvntwapar7j30gj09sdg3&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;按esc退出insert模式&lt;/p&gt;

&lt;p&gt;底行模式下输入&lt;code&gt;:wq&lt;/code&gt;保存退出&lt;/p&gt;

&lt;p&gt;用下面其中一种命令使修改生效&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source /etc/sysconfig/i18n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;. /etc/sysconfig/i18n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;附带网上几个版本的i18n配置文件&lt;/p&gt;

&lt;p&gt;这个版本最普遍，当时可能是我的客户端没有找到这个编码导致还是有些中文无法显示。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LANG=&amp;quot;zh_CN.GB18030&amp;quot;
SUPPORTED=&amp;quot;zh_CN.UTF-8:zh_CN:zh:en_US.UTF-8:en_US:en:zh_CN.GB18030&amp;quot;
SYSFONT=&amp;quot;latarcyrheb-sun16&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面这个可以完全显示。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LANG=&amp;quot;zh_CN.UTF-8&amp;quot;  
SUPPORTED=&amp;quot;zh_CN.UTF-8:zh_CN:zh&amp;quot;  
SYSFONT=&amp;quot;latarcyrheb-sun16&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;修改putty客户端的编码设置&#34;&gt;修改Putty客户端的编码设置&lt;/h2&gt;

&lt;p&gt;其他的客户端也需要设置，方法差不多。&lt;/p&gt;

&lt;p&gt;putty设置&lt;/p&gt;

&lt;p&gt;左侧设置类别的Window-Appearance，右侧的Font settings的Change按钮&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fvnt7nzrshj30cy0argmv&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在字体设置中字体选择带有中文的字体如下图选择楷体Kaiti ，在下方的文字设置选择中文。OK确定&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fvnt9pnoisj30c90fpjsa&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;设置类别的Windows-Translation，右侧如图选择UTF-8编码。这里要选择之前设置的服务器配置文件设置的编码。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fvntbuqak3j30cy0ap0u2&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;以上就是putty客户端的编码设置。&lt;/p&gt;

&lt;h2 id=&#34;正常显示中文效果&#34;&gt;正常显示中文效果&lt;/h2&gt;

&lt;p&gt;经过上面一系列的设置，就可以在SSH终端中正常显示中文了
&lt;img src=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fvnteux1qej30gj09s756&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;学到的几个linux命令&#34;&gt;学到的几个Linux命令&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#全局系统环境变量配置文件
echo &#39;export LANG=&amp;quot;ZH_CN.GB18030&amp;quot;&#39; &amp;gt;&amp;gt;/etc/profile
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;#使配置生效
source /etc/profile
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;#查看结果
echo $LANG
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;更改脚本字符集&#34;&gt;更改脚本字符集&lt;/h2&gt;

&lt;p&gt;有时候脚本内容出现中文乱码，也可以在脚本里面更改字符集&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
　export LANG=&amp;quot;ZH_CN.GB18030&amp;quot;
　（脚本内容）
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;批量文件转码命令&#34;&gt;批量文件转码命令&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;iconv -c -f gbk -t utf-8 $data_path/$item_uv
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;最后付上原centos默认编码配置文件内容&lt;/p&gt;

&lt;p&gt;位置&lt;/p&gt;

&lt;p&gt;/etc/sysconfig/i18n&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LANG=C
SYSFONT=latarcyrheb-sun16
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考自&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/wzb56_earl/article/details/24046995&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/wzb56_earl/article/details/24046995&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/wusuopuBUPT/article/details/50947243&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/wusuopuBUPT/article/details/50947243&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>宝塔面板无法启动pure-ftpd服务的解决办法</title>
      <link>/technology/bt-panel-cannot-active-pure-ftpd/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/bt-panel-cannot-active-pure-ftpd/</guid>
      <description>&lt;p&gt;宝塔面板安装pure-ftpd后发现并没有启动，多次手动重启还是显示关闭状态，重装好几次也无法启动。&lt;/p&gt;

&lt;p&gt;进入ssh
输入以下命令 看是否21端口给其他软件占用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lsof -i :21
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果结果是下面这样就是系统自带的ftp软件给占用了21端口&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@izcupa3t172j1wz ~]# lsof -i :21
COMMAND PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
vsftpd  855 root    3u  IPv6  15453      0t0  TCP *:ftp (LISTEN)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入以下命令启动即可&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pkill -9 vsftpd
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;service pure-ftpd start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以用下面的命令启动pure-ftpd&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/pure-ftpd start

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考：&lt;a href=&#34;https://www.bt.cn/bbs/thread-2746-1-1.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.bt.cn/bbs/thread-2746-1-1.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决wordpress后台安装插件时提示需要ftp账号和密码</title>
      <link>/technology/wordpress-install-plugin-show-ftp-info/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/wordpress-install-plugin-show-ftp-info/</guid>
      <description>&lt;p&gt;在wordpress安装之后，想要安装一个插件来用，结果弹出提示输入ftp账户与密码。如下图&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ww1.sinaimg.cn/large/005YhI8igy1fvmtky7cxqj30ch0dzaab.jpg&#34; alt=&#34;弹出提示输入ftp账户与密码&#34; /&gt;&lt;/p&gt;

&lt;p&gt;最后搜索了一下网上的解决方案，所需要更改wordpress文件夹的权限，命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chown -R www  /home/wwwroot/wordpress
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个命令是将wordpress目录下的所有文件与子目录进行相同的拥有者变更为www(即以递回的方式逐个变更)&lt;/p&gt;

&lt;p&gt;后面的&lt;code&gt;/home/wwwroot/wordpress&lt;/code&gt;路径是自己安装wordpress的文件夹。&lt;/p&gt;

&lt;p&gt;如果这样操作报一下错误的话&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chown: changing ownership of `/home/wwwroot/wordpress/.user.ini&#39;: Operation not permitted
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;只需要如下更改之后就ok了：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chown -R www  /home/wwwroot/hi/*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;只需要在文件路径之后再加一个/* 。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;本文来自：&lt;a href=&#34;https://blog.csdn.net/u014182411/article/details/78127663?utm_source=copy&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://blog.csdn.net/u014182411/article/details/78127663?utm_source=copy&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>宝塔面板忘记密码如何找回宝塔面板账户登录密码</title>
      <link>/technology/bt-panel-get-password-back/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/bt-panel-get-password-back/</guid>
      <description>&lt;h2 id=&#34;找回密码&#34;&gt;找回密码&lt;/h2&gt;

&lt;p&gt;如果只是忘记了密码，还记得账号&lt;/p&gt;

&lt;p&gt;可以输入以下命令回车找回密码（早期版本默认账号admin）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat /www/server/panel/default.pl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面是执行命令实例&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@woo2:~# cat /www/server/panel/default.pl
c58d3170
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;返回的c58d3170就是密码。&lt;/p&gt;

&lt;h2 id=&#34;找回用户名&#34;&gt;找回用户名&lt;/h2&gt;

&lt;p&gt;如果你也不记得账号，可以通过下面的命令来重置密码并得到默认账户。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /www/server/panel &amp;amp;&amp;amp; python tools.pyc panel newpassword
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;newpassword请改成你要修改的密码&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;root@woo2:~# cd /www/server/panel &amp;amp;&amp;amp; python tools.pyc panel newpassword
rwlfzj3w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以看到返回的rwlfzj3w就是你的账号，你可以用这个账号和新密码来登录面板，登录进去后可以去面板设置修改账号密码。&lt;/p&gt;

&lt;p&gt;原文地址：&lt;a href=&#34;http://www.bt.cn/bbs/thread-1172-1-1.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://www.bt.cn/bbs/thread-1172-1-1.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>宝塔启动nginx服务失败提示failed (98:Address already in use)</title>
      <link>/technology/bt-panel-failed-to-start-nginx/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/bt-panel-failed-to-start-nginx/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;发现宝塔的nginx没有在运行，于是在宝塔面板上手动重启，但是提示失败，失败信息是下面那样：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;警告消息：&lt;/p&gt;

&lt;p&gt;nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
nginx: [emerg] still could not bind()&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;

&lt;p&gt;原因是nginx服务被卡死，导致80端口被占用，地址已经被使用。&lt;/p&gt;

&lt;p&gt;解决这一问题的办法，我们得找到占用80端口的服务进程，并结束它。&lt;/p&gt;

&lt;h2 id=&#34;解决办法&#34;&gt;解决办法&lt;/h2&gt;

&lt;p&gt;用 &lt;code&gt;netstat -ntpl&lt;/code&gt; 来查看端口使用情况&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@woo2:/www/server/panel# netstat -ntpl
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      6822/nginx.conf
tcp        0      0 0.0.0.0:21              0.0.0.0:*               LISTEN      6672/pure-ftpd (SER
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1769/sshd
tcp        0      0 0.0.0.0:888             0.0.0.0:*               LISTEN      6822/nginx.conf
tcp        0      0 0.0.0.0:8888            0.0.0.0:*               LISTEN      20242/python
tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      1943/sendmail: MTA:
tcp        0      0 127.0.0.1:587           0.0.0.0:*               LISTEN      1943/sendmail: MTA:
tcp6       0      0 :::21                   :::*                    LISTEN      6672/pure-ftpd (SER
tcp6       0      0 :::22                   :::*                    LISTEN      1769/sshd
tcp6       0      0 :::3306                 :::*                    LISTEN      19710/mysqld

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以看到进程pid 6822占用了80的端口，导致nginx无法启动。&lt;/p&gt;

&lt;p&gt;我们只要将6822进程结束就行了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@woo2:/www/server/panel# kill 6822

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结束后再次查看端口使用情况&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@woo2:/www/server/panel# netstat -ntpl
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:21              0.0.0.0:*               LISTEN      6672/pure-ftpd (SER
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1769/sshd
tcp        0      0 0.0.0.0:8888            0.0.0.0:*               LISTEN      20242/python
tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      1943/sendmail: MTA:
tcp        0      0 127.0.0.1:587           0.0.0.0:*               LISTEN      1943/sendmail: MTA:
tcp6       0      0 :::21                   :::*                    LISTEN      6672/pure-ftpd (SER
tcp6       0      0 :::22                   :::*                    LISTEN      1769/sshd
tcp6       0      0 :::3306                 :::*                    LISTEN      19710/mysqld

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;发现已经没有80端口在使用中了。&lt;/p&gt;

&lt;p&gt;然后就可以在宝塔面板上或者使用
&lt;code&gt;service nginx start&lt;/code&gt;命令来启动nginx服务了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git生成 SSH 公钥添加到GitHub和Coding.net</title>
      <link>/technology/ssh-key-generator-git/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/ssh-key-generator-git/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;大多数 Git 服务器都会选择使用 SSH 公钥来进行授权。系统中的每个用户都必须提供一个公钥用于授权，没有的话就要生成一个。例如我们在使用GitHub Pages来托管博客，或者将代码推到GitHub或者Coding上的话需要先生成一个SSH并填入到托管平台的设置中来授权。&lt;/p&gt;

&lt;h2 id=&#34;生成&#34;&gt;生成&lt;/h2&gt;

&lt;p&gt;生成公钥的过程在所有操作系统上都差不多。 首先先确认一下是否已经有一个公钥了。SSH 公钥默认储存在账户的主目录下的&lt;code&gt;~/.ssh&lt;/code&gt;目录。进去看看：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/.ssh
$ ls
authorized_keys2  id_dsa       known_hosts
config            id_dsa.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;关键是看有没有用 something 和 something.pub 来命名的一对文件，这个 something 通常就是 &lt;code&gt;id_dsa&lt;/code&gt; 或 &lt;code&gt;id_rsa&lt;/code&gt;。有 &lt;code&gt;.pub&lt;/code&gt; 后缀的文件就是公钥，另一个文件则是密钥。假如没有这些文件，或者干脆连 .ssh 目录都没有，可以用 &lt;code&gt;ssh-keygen&lt;/code&gt; 来创建。该程序在 Linux/Mac 系统上由 SSH 包提供，而在 Windows 上则包含在 MSysGit 包里：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/schacon/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /Users/schacon/.ssh/id_rsa.
Your public key has been saved in /Users/schacon/.ssh/id_rsa.pub.
The key fingerprint is:
43:c5:5b:5f:b1:f1:50:43:ad:20:a6:92:6a:1f:9a:3a schacon@agadorlaptop.local
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;它先要求你确认保存公钥的位置（&lt;code&gt;.ssh/id_rsa&lt;/code&gt;），然后它会让你重复一个密码两次，如果不想在使用公钥的时候输入密码，可以留空。&lt;/p&gt;

&lt;p&gt;现在，所有做过这一步的用户都得把它们的公钥给你或者 Git 服务器的管理员（假设 SSH 服务被设定为使用公钥机制）。他们只需要复制 &lt;code&gt;.pub&lt;/code&gt; 文件的内容然后发邮件给管理员。&lt;/p&gt;

&lt;h2 id=&#34;得到公钥&#34;&gt;得到公钥&lt;/h2&gt;

&lt;p&gt;公钥的样子大致如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat ~/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSU
GPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3
Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XA
t3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/En
mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx
NrRFi9wrf+M7Q== schacon@agadorlaptop.local
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将上面得到的公钥内容填到你要授权的托管平台的SSH钥设置中就好了~&lt;/p&gt;

&lt;p&gt;关于在多个操作系统上设立相同 SSH 公钥的教程，可以查阅 GitHub 上有关 SSH 公钥的向导：&lt;a href=&#34;http://github.com/guides/providing-your-ssh-key。&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://github.com/guides/providing-your-ssh-key。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;来源：&lt;a href=&#34;https://git-scm.com/book/zh/v1/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;3 服务器上的 Git - 生成 SSH 公钥&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>宝塔面板安装Flarum轻论坛程序时提示The PHP extension &#39;fileinfo&#39; is required</title>
      <link>/technology/bt-panel-install-fileinfo-for-php/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/bt-panel-install-fileinfo-for-php/</guid>
      <description>&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;

&lt;p&gt;宝塔面板默认并没有安装fileinfo模块，可按以下教程安装：&lt;/p&gt;

&lt;p&gt;注意：以下教程中56为PHP版本，请替换成您要安装此扩展的PHP版本，Flarum轻论坛程序最低要求PHP5.6+&lt;/p&gt;

&lt;h2 id=&#34;解决过程&#34;&gt;解决过程&lt;/h2&gt;

&lt;h3 id=&#34;进入对应版本的fileinfo扩展源码目录&#34;&gt;进入对应版本的fileinfo扩展源码目录&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /www/server/php/56/src/ext/fileinfo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;初始化扩展安装&#34;&gt;初始化扩展安装&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/www/server/php/56/bin/phpize
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;生成编译配置&#34;&gt;生成编译配置&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;./configure --with-php-config=/www/server/php/56/bin/php-config
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编译并安装扩展&#34;&gt;编译并安装扩展&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;写入配置文件&#34;&gt;写入配置文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;echo &#39;extension=fileinfo.so&#39; &amp;gt;&amp;gt; /www/server/php/56/etc/php.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;重载php配置&#34;&gt;重载PHP配置&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;service php-fpm-56 reload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就可以了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>编译安装PHP组件出现错误提示内存不足：virtual memory exhausted Cannot allocate memory</title>
      <link>/technology/no-enough-memory-to-make-php/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/no-enough-memory-to-make-php/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;前面一篇我们介绍了&lt;a href=&#34;https://huaien.me/article/backend/bt-panel-install-fileinfo-for-php/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;宝塔面板的PHP默认不安装fileinfo组件，需要手动编译安装&lt;/a&gt;。在php5.6上是没有出现问题，但是在编译php7.1的版本的&lt;code&gt;make &amp;amp;&amp;amp; make install&lt;/code&gt;这一步出现错误，提示：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;virtual memory exhausted: Cannot allocate memory
Makefile:197: recipe for target &#39;libmagic/apprentice.lo&#39; failed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面是make编译后的详细信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/www/server/php/71/src/ext/fileinfo# make &amp;amp;&amp;amp; make install /bin/sh /www/server/php/71/src/ext/fileinfo/libtool --mode=compile cc -I/www/server/php/71/src/ext/fileinfo/libmagic -I. -I/www/server/php/71/src/ext/fileinfo -DPHP_ATOM_INC -I/www/server/php/71/src/ext/fileinfo/include -I/www/server/php/71/src/ext/fileinfo/main -I/www/server/php/71/src/ext/fileinfo -I/www/server/php/71/include/php -I/www/server/php/71/include/php/main -I/www/server/php/71/include/php/TSRM -I/www/server/php/71/include/php/Zend -I/www/server/php/71/include/php/ext -I/www/server/php/71/include/php/ext/date/lib  -DHAVE_CONFIG_H  -g -O2   -c /www/server/php/71/src/ext/fileinfo/libmagic/apprentice.c -o libmagic/apprentice.lo
 cc -I/www/server/php/71/src/ext/fileinfo/libmagic -I. -I/www/server/php/71/src/ext/fileinfo -DPHP_ATOM_INC -I/www/server/php/71/src/ext/fileinfo/include -I/www/server/php/71/src/ext/fileinfo/main -I/www/server/php/71/src/ext/fileinfo -I/www/server/php/71/include/php -I/www/server/php/71/include/php/main -I/www/server/php/71/include/php/TSRM -I/www/server/php/71/include/php/Zend -I/www/server/php/71/include/php/ext -I/www/server/php/71/include/php/ext/date/lib -DHAVE_CONFIG_H -g -O2 -c /www/server/php/71/src/ext/fileinfo/libmagic/apprentice.c  -fPIC -DPIC -o libmagic/.libs/apprentice.o
virtual memory exhausted: Cannot allocate memory
Makefile:197: recipe for target &#39;libmagic/apprentice.lo&#39; failed
make: *** [libmagic/apprentice.lo] Error 1

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;

&lt;p&gt;==这个意思是内存不足，无法完成编译。==&lt;/p&gt;

&lt;p&gt;本次使用的是AWS t2.micro配置的EC2实例，实际上其内存有1GB，但是还是出现本次的错误，应该是同时运行的其他程序导致内存不足。&lt;/p&gt;

&lt;h2 id=&#34;解决办法&#34;&gt;解决办法&lt;/h2&gt;

&lt;p&gt;既然这样，物理内存不足我们没办法，但是可以通过自行增加虚拟内存的方法来解决。&lt;/p&gt;

&lt;h3 id=&#34;通过free-m来查看下内存使用状况&#34;&gt;通过free -m来查看下内存使用状况&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# free -m
              total        used        free      shared  buff/cache   available
Mem:            990         466         447           3          76         401
Swap:             0           0           0

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建一个目录-opt-images&#34;&gt;创建一个目录/opt/images/&lt;/h3&gt;

&lt;p&gt;你可以自己定路径&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir /opt/images/
# rm -rf /opt/images/swap
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建一个2gb大小的文件&#34;&gt;创建一个2GB大小的文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# dd if=/dev/zero of=/opt/images/swap bs=1024 count=2048000
2048000+0 records in
2048000+0 records out
2097152000 bytes (2.1 GB, 2.0 GiB) copied, 30.3635 s, 69.1 MB/s

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;把创建的文件变成swap分区&#34;&gt;把创建的文件变成SWAP分区&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# mkswap /opt/images/swap
Setting up swapspace version 1, size = 2 GiB (2097147904 bytes)
no label, UUID=dd2fa2db-f8bd-41db-9e1a-5d9257924c6f

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;启用这个swap文件&#34;&gt;启用这个SWAP文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# swapon /opt/images/swap
swapon: /opt/images/swap: insecure permissions 0644, 0600 suggested.

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;看看swap是否生效&#34;&gt;看看SWAP是否生效&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# free -m
              total        used        free      shared  buff/cache   available
Mem:            990         467          64           3         458         356
Swap:          1999           0        1999

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以看到的确有2GB的SWAP内存&lt;/p&gt;

&lt;h3 id=&#34;然后回到原来的作业&#34;&gt;然后回到原来的作业&lt;/h3&gt;

&lt;p&gt;使用&lt;code&gt;cd -&lt;/code&gt;回到原来的&lt;code&gt;/www/server/php/71/src/ext/fileinfo&lt;/code&gt;目录&lt;/p&gt;

&lt;h3 id=&#34;继续编译fileinfo&#34;&gt;继续编译fileinfo&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行成功&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;See any operating system documentation about shared libraries for
more information, such as the ld(1) and ld.so(8) manual pages.
----------------------------------------------------------------------

Build complete.
Don&#39;t forget to run &#39;make test&#39;.

Installing shared extensions:     /www/server/php/71/lib/php/extensions/no-debug-non-zts-20160303/

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;完成后关闭swap&#34;&gt;完成后关闭SWAP&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# swapoff swap
# rm -f /opt/images/swap

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以后再出现内存不足可以通过增加SWAP虚拟内存来解决~&lt;/p&gt;

&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/chenpingzhao/p/4820814.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.cnblogs.com/chenpingzhao/p/4820814.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS用ec2-user用户来更改root密码并使用root用户</title>
      <link>/technology/change-password-for-root-on-aws-ec2/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/change-password-for-root-on-aws-ec2/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;AWS的EC2在创建实例后，默认是使用ec2-user用户加密钥文件来登录ssh，使用AWS默认的EC2账户登录服务器后，用户权限收到很大的限制，有些目录无法访问，需要切换到root账户下工作。&lt;/p&gt;

&lt;h2 id=&#34;创建root密码&#34;&gt;创建root密码&lt;/h2&gt;

&lt;p&gt;初次登录aws后并没有默认的root用户密码，需要在ec2用户下创建root密码，可以使用命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo passwd root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在出现提示后创建新密码。&lt;/p&gt;

&lt;h2 id=&#34;重置密码&#34;&gt;重置密码&lt;/h2&gt;

&lt;p&gt;如果出现root密码丢失的情况，也可以使用上边的命令重新生成新的root密码。&lt;/p&gt;

&lt;h2 id=&#34;切换root用户&#34;&gt;切换root用户&lt;/h2&gt;

&lt;p&gt;密码更改完成，后续的切换用户操作用 su 命令输入设定好的新密码就可以切换到root用户了。&lt;/p&gt;

&lt;p&gt;经常登录AWS EC2的话，这个在一开始就会用到，如果修改密码，这个命令也是很方便的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>正确使用AMP 让Google找到你的AMP页面</title>
      <link>/technology/let-google-find-your-amp/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/let-google-find-your-amp/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;在用Hexo的&lt;a href=&#34;https://github.com/tea3/hexo-generator-amp&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;hexo-generator-amp&lt;/a&gt;插件后，发现并没有被收录AMP页面。
查看了下官方文档，如果要让你的AMP页面被找到，需要在head加入link。&lt;/p&gt;

&lt;h2 id=&#34;如何让-google-发现我的-amp-网页&#34;&gt;如何让 Google 发现我的 AMP 网页？&lt;/h2&gt;

&lt;p&gt;如果有其他网页链接到或引荐 AMP 网页，Google 会将这些 AMP 网页编入索引。&lt;/p&gt;

&lt;p&gt;如果您的网页既有 AMP 版本，又有非 AMP 版本，请包含以下链接：&lt;/p&gt;

&lt;h3 id=&#34;非amp网页&#34;&gt;非AMP网页&lt;/h3&gt;

&lt;p&gt;在任意非 AMP 网页上，引荐相应网页的 AMP 版本，让 Google 和其他平台知道相应网页存在 AMP 版本：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;amphtml&amp;quot; href=&amp;quot;https://www.example.com/url/to/amp-version.html&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;amp网页&#34;&gt;AMP网页&lt;/h3&gt;

&lt;p&gt;在 AMP 网页上，添加以下文本，以便引荐相应的非 AMP 规范版本：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;canonical&amp;quot; href=&amp;quot;https://www.example.com/url/to/regular-html-version.html&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;独立的amp网页&#34;&gt;独立的AMP网页&lt;/h3&gt;

&lt;p&gt;对于独立的 AMP 网页（即不存在非 AMP 版本），请将 AMP 网页本身指定为规范版本：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;canonical&amp;quot; href=&amp;quot;https://www.example.com/url/to/amp-document.html&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Google 在发现独立的 AMP 网页后，也会将其编入索引。因此，对于独立的 AMP 网页，请务必确保能够通过其他已编入索引的网页链接到它们，或将它们列入站点地图。&lt;/p&gt;

&lt;p&gt;最后，请务必仔细检查以确保您未在 AMP 网页的 robots.txt 文件中阻止 Google！&lt;/p&gt;

&lt;p&gt;虽然Hexo的amp生成插件有一段代码需要加入head里面。
例如本站用的Next主题，需要在&lt;a href=&#34;https://github.com/iissnan/hexo-theme-next/blob/master/layout/_partials/head.swig里面加入&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/iissnan/hexo-theme-next/blob/master/layout/_partials/head.swig里面加入&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% if is_post() &amp;amp;&amp;amp; config.generator_amp %}
  &amp;lt;link rel=&amp;quot;amphtml&amp;quot; href=&amp;quot;./amp/index.html&amp;quot;&amp;gt;
{% endif %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是生成页面后查看页面源码，却没有在正常页面里面发现上面这个amp的指向码，所以觉得应该是判断的语句有问题，索性就直接删除了判断语句，直接用中间那一句就好。也就是&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;amphtml&amp;quot; href=&amp;quot;./amp/index.html&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再次生成后就发现页面里面有该代码了。&lt;/p&gt;

&lt;p&gt;而且在AMP的测试网站测试正常页面的时候也会提示
&amp;gt; 链接到在提交的网址上检测到的 AMP 网址
您可能输入的是权威网页的网址。该网页链接到以下 AMP 网址：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2018/08/08/5b6a55a0a87b3.png&#34; alt=&#34;AMP的测试网站&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;如何检查-google-是否发现了我的-amp-网页&#34;&gt;如何检查 Google 是否发现了我的 AMP 网页？&lt;/h2&gt;

&lt;p&gt;我们在 Search Console 中提供了 &lt;a href=&#34;https://support.google.com/webmasters/answer/6328309&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;AMP 搜索结果外观报告&lt;/a&gt;，以帮助您了解 Google 发现了哪些 AMP 网页。在 Search Console 中依次点击“搜索结果外观”&amp;gt;“Accelerated Mobile Pages”即可找到此类报告。&lt;/p&gt;

&lt;p&gt;搜索结果外观报告可帮助您快速找出未编入索引的 AMP 网页存在的最常见的问题，以便您在网站上实现 AMP 网页的过程中系统性地解决这些问题。您可能只需对模板进行细微调整，或者为内容管理系统 (CMS) 安装兼容的插件，便能解决相关问题。&lt;/p&gt;

&lt;p&gt;请注意，如果您最近才创建了有效的 AMP 网页，那么这些网页可能要过几天才会显示在搜索结果外观报告中。&lt;/p&gt;

&lt;h2 id=&#34;如何检查我的-amp-网页是否可以显示在-google-搜索中&#34;&gt;如何检查我的 AMP 网页是否可以显示在 Google 搜索中？&lt;/h2&gt;

&lt;p&gt;只有有效的 AMP 网页才可显示在 Google 搜索中。因此，请使用 &lt;a href=&#34;https://validator.ampproject.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;AMP HTML 网页验证工具&lt;/a&gt;、&lt;a href=&#34;https://chrome.google.com/webstore/detail/amp-validator/nmoffdblmcmgeicmolmhobpoocbbmknc&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Chrome 扩展程序&lt;/a&gt;或通过更加自动化的流程（例如 cron 作业）来检查您的 AMP 网页是否有效，从而确保所有新内容均有效。&lt;/p&gt;

&lt;p&gt;虽然总体来讲在您的 AMP 网页中添加结构化数据是不错的做法（我们建议使用 JSON-LD），但这对新闻发布商来说尤其重要，因为包含&lt;a href=&#34;https://developers.google.com/structured-data/rich-snippets/articles&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;相应标记属性&lt;/a&gt;的新闻内容可能会显示在 Google 搜索结果的“焦点新闻”链接版块（包括“焦点新闻”轮换展示部分）中。使用 &lt;a href=&#34;https://developers.google.com/structured-data/testing-tool&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Google 结构化数据测试工具&lt;/a&gt;测试结构化数据的操作步骤很简单。
更多请参考：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ampproject.org/docs/fundamentals/discovery&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.ampproject.org/docs/fundamentals/discovery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://productforums.google.com/forum/?hl=zh-hant#!topic/webmaster-zh-cn/1uPZAhxpReg&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://productforums.google.com/forum/?hl=zh-hant#!topic/webmaster-zh-cn/1uPZAhxpReg&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>32位Linux系统的node_modules文件夹移到64位系统下报错</title>
      <link>/technology/unable-to-use-nodejs-on-64-bit-os/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/technology/unable-to-use-nodejs-on-64-bit-os/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;把Hexo博客源码整个从32位的Linux系统搬到64位系统下，本来还没发现32位和64位，直到执行hexo clean的时候提示错误才发现。node_modules文件夹的指定模块报错。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# hexo clean
ERROR Plugin load failed: hexo-generator-amp
Error: Missing binding /blog/node_modules/node-sass/vendor/linux-x64-64/binding.node
Node Sass could not find a binding for your current environment: Linux 64-bit with Node.js 10.x

Found bindings for the following environments:
  - Linux 32-bit with Node.js 8.x

This usually happens because your environment has changed since running `npm install`.
Run `npm rebuild node-sass` to download the binding for your current environment.
    at module.exports (/www/wwwroot/pan.guosao.com/data/User/admin/home/blog/node_modules/node-sass/lib/binding.js:15:13)
    at Object.&amp;lt;anonymous&amp;gt; (/www/wwwroot/pan.guosao.com/data/User/admin/home/blog/node_modules/node-sass/lib/index.js:14:35)
    at Module._compile (internal/modules/cjs/loader.js:689:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:700:10)
    at Module.load (internal/modules/cjs/loader.js:599:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:538:12)
    at Function.Module._load (internal/modules/cjs/loader.js:530:3)
    at Module.require (internal/modules/cjs/loader.js:637:17)
    at require (internal/modules/cjs/helpers.js:20:18)
    at Object.&amp;lt;anonymous&amp;gt; (/www/wwwroot/pan.guosao.com/data/User/admin/home/blog/node_modules/hexo-generator-amp/lib/templatePath.js:4:22)
    at Module._compile (internal/modules/cjs/loader.js:689:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:700:10)
    at Module.load (internal/modules/cjs/loader.js:599:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:538:12)
    at Function.Module._load (internal/modules/cjs/loader.js:530:3)
    at Module.require (internal/modules/cjs/loader.js:637:17)
    at require (internal/modules/cjs/helpers.js:20:18)
    at Object.&amp;lt;anonymous&amp;gt; (/www/wwwroot/pan.guosao.com/data/User/admin/home/blog/node_modules/hexo-generator-amp/lib/generator.js:5:24)
    at Module._compile (internal/modules/cjs/loader.js:689:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:700:10)
    at Module.load (internal/modules/cjs/loader.js:599:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:538:12)
INFO  Deleted database.
INFO  Deleted public folder.

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;错误信息&#34;&gt;错误信息&lt;/h2&gt;

&lt;p&gt;主要就是下面这两句&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Node Sass could not find a binding for your current environment: Linux 64-bit with Node.js 10.x

Found bindings for the following environments:
  - Linux 32-bit with Node.js 8.x
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;就是node sass找不到适合你现在Linux 64位系统的环境捆绑，
当前找到的是适合32位Linux系统的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;解决方法&#34;&gt;解决方法&lt;/h2&gt;

&lt;p&gt;里面也附带了解决的办法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This usually happens because your environment has changed since running `npm install`.
Run `npm rebuild node-sass` to download the binding for your current environment.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这通常是因为你换了环境然后执行&lt;code&gt;npm install&lt;/code&gt;导致。
执行&lt;code&gt;npm rebuild node-sass&lt;/code&gt; 来下下载适合你的当前环境的捆绑。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@do-sf2:/www/wwwroot/pan.guosao.com/data/User/admin/home/blog# npm rebuild node-sass

&amp;gt; node-sass@4.9.2 install /www/wwwroot/pan.guosao.com/data/User/admin/home/blog/node_modules/node-sass
&amp;gt; node scripts/install.js

Downloading binary from https://github.com/sass/node-sass/releases/download/v4.9.2/linux-x64-64_binding.node
Download complete  ] - :
Binary saved to /www/wwwroot/pan.guosao.com/data/User/admin/home/blog/node_modules/node-sass/vendor/linux-x64-64/binding.node
Caching binary to /root/.npm/node-sass/4.9.2/linux-x64-64_binding.node

&amp;gt; node-sass@4.9.2 postinstall /www/wwwroot/pan.guosao.com/data/User/admin/home/blog/node_modules/node-sass
&amp;gt; node scripts/build.js

Binary found at /www/wwwroot/pan.guosao.com/data/User/admin/home/blog/node_modules/node-sass/vendor/linux-x64-64/binding.node
Testing binary
Binary is fine
node-sass@4.9.2 /www/wwwroot/pan.guosao.com/data/User/admin/home/blog/node_modules/node-sass
root@do-sf2:/www/wwwroot/pan.guosao.com/data/User/admin/home/blog# hexo clean
INFO  Deleted database.

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行后就可以正常使用了。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>